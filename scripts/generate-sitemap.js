#!/usr/bin/env node

/**
 * Script para gerar sitemap.xml automaticamente
 * Baseado nas rotas da aplica√ß√£o React
 */

import fs from 'fs'
import path from 'path'
import { fileURLToPath } from 'url'

// Configura√ß√µes
const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)
const BASE_URL = 'https://www.riderforge.app'
const OUTPUT_FILE = path.join(__dirname, '../public/sitemap.xml')
const LAST_MOD = new Date().toISOString()

// Rotas da aplica√ß√£o com suas configura√ß√µes SEO
const routes = [
  {
    path: '/',
    priority: '1.0',
    changefreq: 'weekly',
    title: 'Rider Forge - Professional Technical Rider Creator',
    description: 'Home page (EN)'
  },
  {
    path: '/pt',
    priority: '0.9',
    changefreq: 'weekly',
    title: 'Rider Forge - Criador Profissional de Riders T√©cnicos',
    description: 'P√°gina inicial (PT)'
  },
  {
    path: '/pricing',
    priority: '0.9',
    changefreq: 'monthly',
    title: 'Pre√ßos e Planos',
    description: 'P√°gina de pre√ßos e planos do Rider Forge'
  },
  // Dashboard removido do sitemap (√°rea de usu√°rio)
  {
    path: '/pro-subscription',
    priority: '0.7',
    changefreq: 'monthly',
    title: 'Assinatura Pro',
    description: 'P√°gina de assinatura Pro'
  },
  {
    path: '/support',
    priority: '0.6',
    changefreq: 'monthly',
    title: 'Suporte e Ajuda',
    description: 'P√°gina de suporte'
  },
  {
    path: '/technical-rider',
    priority: '0.8',
    changefreq: 'monthly',
    title: 'What is a Technical Rider?',
    description: 'Landing page EN'
  },
  {
    path: '/pt/rider-tecnico',
    priority: '0.8',
    changefreq: 'monthly',
    title: 'O que √© um Rider T√©cnico?',
    description: 'Landing page PT'
  },
  {
    path: '/faq',
    priority: '0.6',
    changefreq: 'monthly',
    title: 'Perguntas Frequentes',
    description: 'FAQ do Rider Forge'
  },
  {
    path: '/terms-privacy',
    priority: '0.4',
    changefreq: 'yearly',
    title: 'Termos de Uso e Privacidade',
    description: 'Termos e pol√≠tica de privacidade'
  }
]

// Fun√ß√£o para gerar o XML do sitemap
function generateSitemapXML() {
  const xmlHeader = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9
        http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">`

  const xmlFooter = `
</urlset>`

  const urlEntries = routes.map(route => {
    const fullUrl = `${BASE_URL}${route.path}`
    return `  
  <!-- ${route.description} -->
  <url>
    <loc>${fullUrl}</loc>
    <lastmod>${LAST_MOD}</lastmod>
    <changefreq>${route.changefreq}</changefreq>
    <priority>${route.priority}</priority>
  </url>`
  }).join('\n')

  return xmlHeader + urlEntries + xmlFooter
}

// Fun√ß√£o principal
function main() {
  try {
    console.log('üîÑ Gerando sitemap.xml...')
    
    const sitemapXML = generateSitemapXML()
    
    // Criar diret√≥rio se n√£o existir
    const outputDir = path.dirname(OUTPUT_FILE)
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true })
    }
    
    // Escrever arquivo
    fs.writeFileSync(OUTPUT_FILE, sitemapXML, 'utf8')
    
    console.log('‚úÖ Sitemap gerado com sucesso!')
    console.log(`üìÅ Localiza√ß√£o: ${OUTPUT_FILE}`)
    console.log(`üîó URLs inclu√≠das: ${routes.length}`)
    console.log(`üìÖ √öltima modifica√ß√£o: ${LAST_MOD}`)
    
    // Mostrar estat√≠sticas
    console.log('\nüìä Estat√≠sticas:')
    routes.forEach(route => {
      console.log(`  ‚Ä¢ ${route.path} (prioridade: ${route.priority}, frequ√™ncia: ${route.changefreq})`)
    })
    
  } catch (error) {
    console.error('‚ùå Erro ao gerar sitemap:', error.message)
    process.exit(1)
  }
}

// Executar se chamado diretamente
main()
